# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Unity - Builder
        # You may pin to the exact commit or the version.
        # uses: game-ci/unity-builder@2652cb78a7f9424999e3ebef90a55c35a8c7f080
        uses: game-ci/unity-builder@v2.0.4
        with:
          # Platform that the build should target.
          targetPlatform: # default is 
          # Version of unity to use for building the project. Use "auto" to get from your ProjectSettings/ProjectVersion.txt
          unityVersion: # optional, default is auto
          # Specific docker image that should be used for building the project
          customImage: # optional, default is 
          # Relative path to the project to be built.
          projectPath: # optional, default is 
          # Name of the build.
          buildName: # optional, default is 
          # Path where the builds should be stored.
          buildsPath: # optional, default is 
          # Path to a Namespace.Class.StaticMethod to run to perform the build.
          buildMethod: # optional, default is 
          # Custom parameters to configure the build.
          customParameters: # optional, default is 
          # The versioning scheme to use when building the project
          versioning: # optional, default is Semantic
          # The version, when used with the "Custom" versioning scheme
          version: # optional, default is 
          # The android versionCode
          androidVersionCode: # optional, default is 
          # Whether to build .aab instead of .apk
          androidAppBundle: # optional, default is false
          # The android keystoreName
          androidKeystoreName: # optional, default is 
          # The base64 contents of the android keystore file
          androidKeystoreBase64: # optional, default is 
          # The android keystorePass
          androidKeystorePass: # optional, default is 
          # The android keyaliasName
          androidKeyaliasName: # optional, default is 
          # The android keyaliasPass
          androidKeyaliasPass: # optional, default is 
          # The android target API level.
          androidTargetSdkVersion: # optional, default is 
          # SSH Agent path to forward to the container
          sshAgent: # optional, default is 
          # Github private token to pull from github
          gitPrivateToken: # optional, default is 
          # User and optionally group (user or user:group or uid:gid) to give ownership of the resulting build artifacts
          chownFilesTo: # optional, default is 
          # Allows the branch of the build to be dirty, and still generate the build.
          allowDirtyBuild: # optional, default is 
          # run a post build job in yaml format with the keys image, secrets (name, value object array), command string
          postBuildSteps: # optional, default is 
          # Run a pre build job after the repository setup but before the build job (in yaml format with the keys image, secrets (name, value object array), command line string)
          preBuildSteps: # optional, default is 
          # Specify custom commands and trigger hooks (injects commands into jobs)
          customJobHooks: # optional, default is 
          # Run a custom job instead of the standard build automation for cloud runner (in yaml format with the keys image, secrets (name, value object array), command line string)
          customJob: # optional, default is 
          # The Cloud Formation stack name that must be setup before using this option.
          awsBaseStackName: # optional, default is game-ci
          # Either local, k8s or aws can be used to run builds on a remote cluster. Additional parameters must be configured.
          cloudRunnerCluster: # optional, default is local
          # Amount of CPU time to assign the remote build container
          cloudRunnerCpu: # optional, default is 
          # Amount of memory to assign the remote build container
          cloudRunnerMemory: # optional, default is 
          # A command run every time a file is pushed to cache, formatted with input file path and remote cache path
          cachePushOverrideCommand: # optional, default is 
          # A command run every time before a file is being pulled from cache, formatted with request cache file and destination path
          cachePullOverrideCommand: # optional, default is 
          # Comma separated list of input value names to read from "input override command"
          readInputFromOverrideList: # optional, default is 
          # Extend game ci by specifying a command to execute to pull input from external source e.g cloud provider secret managers
          readInputOverrideCommand: # optional, default is 
          # Supply a base64 encoded kubernetes config to run builds on kubernetes and stream logs until completion.
          kubeConfig: # optional, default is 
          # Supply a Persistent Volume Claim name to use for the Unity build.
          kubeVolume: # optional, default is 
          # Kubernetes storage class to use for cloud runner jobs, leave empty to install rook cluster.
          kubeStorageClass: # optional, default is 
          # Amount of disc space to assign the Kubernetes Persistent Volume
          kubeVolumeSize: # optional, default is 5Gi
          # Cache key to indicate bucket for cache
          cacheKey: # optional, default is 
          # Use to specify a way to check depdency services health to enable resilient self-starting jobs
          checkDependencyHealthOverride: # optional, default is 
          # Use to specify a way to start depdency services health to enable resilient self-starting jobs
          startDependenciesOverride: # optional, default is 
